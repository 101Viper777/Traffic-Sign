model {
  ssd {
    num_classes: 4  # Update this to your number of classes
    image_resizer {
      fixed_shape_resizer {
        height: 640
        width: 640
      }
    }
    feature_extractor {
      type: 'ssd_mobilenet_v1_fpn_keras'
      depth_multiplier: 1.0
      min_depth: 16
      conv_hyperparams {
        regularizer {
          l2_regularizer {
            weight: 3.9999998989515007e-05
          }
        }
        initializer {
          random_normal_initializer {
            mean: 0.0
            stddev: 0.01
          }
        }
        activation: RELU_6,
        batch_norm {
          decay: 0.996999979019165
          scale: true
          epsilon: 0.0010000000474974513
        }
      }
      override_base_feature_extractor_hyperparams: true
    }
    box_coder {
      faster_rcnn_box_coder {
        y_scale: 10.0
        x_scale: 10.0
        height_scale: 5.0
        width_scale: 5.0
      }
    }
    # ... (Other configurations remain the same)

    fine_tune_checkpoint: "/content/ssd_mobilenet_v1_fpn_640x640_1/saved_model.pb"
    fine_tune_checkpoint_type: "detection"
    fine_tune_checkpoint_version: V2
  }
}

train_config: {
  batch_size: 24  # Update this according to your hardware
  sync_replicas: true
  startup_delay_steps: 0
  replicas_to_aggregate: 8
  num_steps: 25000  # Update this to the desired number of steps
  # ... (Other configurations remain the same)
}

train_input_reader: {
  label_map_path: "/content/Traffic-Sign/labelMap.pbtxt"
  tf_record_input_reader {
    input_path: "/content/Traffic-Sign/all.tfrecord"
  }
}

eval_config: {
  metrics_set: "coco_detection_metrics"
  use_moving_averages: false
}

eval_input_reader: {
  label_map_path: "/content/Traffic-Sign/labelMap.pbtxt"
  shuffle: false
  num_epochs: 1
  tf_record_input_reader {
    input_path: "/content/Traffic-Sign/all.tfrecord"  # You can use the same file for evaluation if you don't have a separate validation set
  }
  sample_1_of_n_examples: 1
  num_readers: 1
}
